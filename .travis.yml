language: haxe
sudo: required

os:
  - linux

# see haxe versions: http://haxe.org/website-content/downloads/versions.json
haxe:
  - "3.4.0"
  - "3.4.1"
  - "3.4.2"
  - "3.4.3"
  - "3.4.4"
  - "4.0.0-preview.1"
  - "4.0.0-preview.2"
  - development

install:
  # Try running the unit tests via travix
  - haxelib install travix
  - haxelib run travix install

  # Get the documentation generator
  - haxelib install dox
  
  # Unit test runner dependencies
  - haxelib install utest

script:
  # Package the haxelib
  - chmod +x ./package_haxelib.sh
  - ./package_haxelib.sh
  
  # Generate documentation
  - pushd dox
  - chmod +x ./generate_docs.sh
  - ./generate_docs.sh
  - popd
  
  # Build/run the unit tests using the neko target
  # Using the hxml that devs use day-to-day on a local machine
  - pushd unit
  - haxe tests.hxml -neko bin/neko.n
  - chmod +x ./bin/neko.n
  - neko bin/neko.n
  - popd
  
  # Run Travix for the rest of the targets
  - haxelib run travix interp
  - haxelib run travix neko
  - haxelib run travix python
  - haxelib run travix node
  - haxelib run travix flash
  - haxelib run travix java
  - haxelib run travix cpp
  - haxelib run travix cs
  - haxelib run travix php

# Deploy the built haxelib to GitHub releases
deploy:
  provider: releases
  skip_cleanup: true
  api_key: $GITHUB_API_KEY
  file: MacroTween.zip
  # Only deploy for tagged builds for one of the builds
  on:
    condition: "$TRAVIS_HAXE_VERSION = 3.4.4"
    tags: true

# Deploy generated documentation to GitHub Pages
deploy:
  provider: pages
  skip_cleanup: true
  local_dir: $TRAVIS_BUILD_DIR/dox/generated_docs
  github_token: $GITHUB_API_KEY
  # Only deploy for one of the Haxe builds
  on:
    condition: "$TRAVIS_HAXE_VERSION = 3.4.4"
    branch: master